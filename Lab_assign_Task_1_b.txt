#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif
#include <stdio.h>
#include <stdlib.h>

int x1, y1, x2, y2;
int thickness;

void myInit() {
	glClearColor(0.0, 0.0, 0.0, 1.0);
	glClear(GL_COLOR_BUFFER_BIT);
	glMatrixMode(GL_PROJECTION);
	gluOrtho2D(0, 500, 0, 500);
}

void draw_pixel(int x, int y) {
	glBegin(GL_POINTS);
	glVertex2i(x, y);
	glEnd();
}

void draw_thick_pixel(int cx, int cy, int w) {
	int r = (w - 1) / 2;
	for (int dx = -r; dx <= r; dx++) {
		for (int dy = -r; dy <= r; dy++) {
			draw_pixel(cx + dx, cy + dy);
		}
	}
	if (w % 2 == 0) {
		for (int dx = -r; dx <= r; dx++) draw_pixel(cx + dx, cy + r + 1);
		for (int dx = -r; dx <= r; dx++) draw_pixel(cx + dx, cy - r - 1);
		for (int dy = -r; dy <= r; dy++) draw_pixel(cx + r + 1, cy + dy);
		for (int dy = -r; dy <= r; dy++) draw_pixel(cx - r - 1, cy + dy);
	}
}

void draw_line_thick(int x1, int y1, int x2, int y2, int w) {
	int dx, dy, i, e;
	int incx, incy, inc1, inc2;
	int x, y;
	dx = x2 - x1;
	dy = y2 - y1;
	if (dx < 0) dx = -dx;
	if (dy < 0) dy = -dy;
	incx = 1;
	if (x2 < x1) incx = -1;
	incy = 1;
	if (y2 < y1) incy = -1;
	x = x1;
	y = y1;
	if (dx > dy) {
		draw_thick_pixel(x, y, w);
		e = 2 * dy - dx;
		inc1 = 2 * (dy - dx);
		inc2 = 2 * dy;
		for (i = 0; i < dx; i++) {
			if (e >= 0) {
				y += incy;
				e += inc1;
			} else {
				e += inc2;
			}
			x += incx;
			draw_thick_pixel(x, y, w);
		}
	} else {
		draw_thick_pixel(x, y, w);
		e = 2 * dx - dy;
		inc1 = 2 * (dx - dy);
		inc2 = 2 * dx;
		for (i = 0; i < dy; i++) {
			if (e >= 0) {
				x += incx;
				e += inc1;
			} else {
				e += inc2;
			}
			y += incy;
			draw_thick_pixel(x, y, w);
		}
	}
}

void myDisplay() {
	glColor3f(1.0, 1.0, 1.0);
	draw_line_thick(x1, y1, x2, y2, thickness);
	glFlush();
}

int main(int argc, char **argv) {
	printf("Enter x1 y1 x2 y2 thickness\n");
	if (scanf("%d %d %d %d %d", &x1, &y1, &x2, &y2, &thickness) != 5) return 0;
	if (thickness < 1) thickness = 1;
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(500, 500);
	glutInitWindowPosition(100, 100);
	glutCreateWindow("Bresenham Thick Line");
	myInit();
	glutDisplayFunc(myDisplay);
	glutMainLoop();
	return 0;
}
